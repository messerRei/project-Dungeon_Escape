
import java.awt.AWTException;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class GUI extends javax.swing.JFrame {
    private JButton ExitButton; 
    monsterGen newMob = new monsterGen();
    Hero Hero = new Hero();
    boolean Turn = true;
    
    /**
     * Creates new form Main
     */
    public GUI() {
        ExitButton = new javax.swing.JButton();
        initComponents();
        Fight.setVisible(false);
        dialogText.setLineWrap(true);
        dialogText.setText(""); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        contPan = new javax.swing.JPanel();
        Start = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Fight = new javax.swing.JPanel();
        HeroName = new javax.swing.JLabel();
        hpIcon = new javax.swing.JLabel();
        hpBar = new javax.swing.JLabel();
        weaponIcon = new javax.swing.JLabel();
        weapon = new javax.swing.JLabel();
        mobStatsPanel = new javax.swing.JPanel();
        monsterIcon = new javax.swing.JLabel();
        HPset = new javax.swing.JLabel();
        HP = new javax.swing.JLabel();
        textArea = new javax.swing.JScrollPane();
        dialogText = new javax.swing.JTextArea();
        actionPanel = new javax.swing.JPanel();
        attackButton = new javax.swing.JButton();
        blockButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        MenuPanel = new javax.swing.JPanel();
        StatsButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(600, 0));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(480, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(480, 720));
        getContentPane().setLayout(null);

        contPan.setBackground(new java.awt.Color(19, 34, 15));
        contPan.setPreferredSize(new java.awt.Dimension(480, 720));

        Start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/logo.jpg"))); // NOI18N

        javax.swing.GroupLayout StartLayout = new javax.swing.GroupLayout(Start);
        Start.setLayout(StartLayout);
        StartLayout.setHorizontalGroup(
            StartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(StartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
        );
        StartLayout.setVerticalGroup(
            StartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(StartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Fight.setBackground(new java.awt.Color(19, 34, 15));
        Fight.setPreferredSize(new java.awt.Dimension(480, 720));

        HeroName.setFont(new java.awt.Font("Lithos Pro Regular", 0, 24)); // NOI18N
        HeroName.setForeground(new java.awt.Color(255, 0, 51));
        HeroName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HeroName.setText("Hero");

        hpIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/HP.png"))); // NOI18N

        hpBar.setFont(new java.awt.Font("Lithos Pro Regular", 0, 24)); // NOI18N
        hpBar.setForeground(new java.awt.Color(255, 255, 255));
        hpBar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hpBar.setText("100/100");

        weaponIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/weapon.png"))); // NOI18N
        weaponIcon.setText("jLabel3");
        weaponIcon.setPreferredSize(new java.awt.Dimension(32, 32));

        weapon.setFont(new java.awt.Font("Lithos Pro Regular", 0, 24)); // NOI18N
        weapon.setForeground(new java.awt.Color(255, 255, 255));
        weapon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        weapon.setText("Knife");

        mobStatsPanel.setBackground(new java.awt.Color(19, 34, 15));
        mobStatsPanel.setPreferredSize(new java.awt.Dimension(480, 70));

        monsterIcon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        monsterIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/goblin.png"))); // NOI18N

        HPset.setFont(new java.awt.Font("Lithos Pro Regular", 0, 36)); // NOI18N
        HPset.setForeground(new java.awt.Color(255, 255, 255));
        HPset.setText("100/100");

        HP.setFont(new java.awt.Font("Lithos Pro Regular", 0, 36)); // NOI18N
        HP.setForeground(new java.awt.Color(255, 255, 255));
        HP.setText("HP:");

        javax.swing.GroupLayout mobStatsPanelLayout = new javax.swing.GroupLayout(mobStatsPanel);
        mobStatsPanel.setLayout(mobStatsPanelLayout);
        mobStatsPanelLayout.setHorizontalGroup(
            mobStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mobStatsPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(monsterIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(HP)
                .addGap(18, 18, 18)
                .addComponent(HPset)
                .addGap(18, 18, 18))
        );
        mobStatsPanelLayout.setVerticalGroup(
            mobStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(monsterIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(HP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(HPset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        textArea.setBackground(new java.awt.Color(0, 0, 0));

        dialogText.setEditable(false);
        dialogText.setBackground(new java.awt.Color(0, 0, 0));
        dialogText.setColumns(20);
        dialogText.setFont(new java.awt.Font("Lithos Pro Regular", 0, 18)); // NOI18N
        dialogText.setForeground(new java.awt.Color(255, 255, 255));
        dialogText.setRows(5);
        dialogText.setWrapStyleWord(true);
        dialogText.setBorder(null);
        textArea.setViewportView(dialogText);

        actionPanel.setBackground(new java.awt.Color(0, 0, 0));
        actionPanel.setLayout(new java.awt.GridLayout(1, 0));

        attackButton.setBackground(new java.awt.Color(0, 0, 0));
        attackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/attack.jpg"))); // NOI18N
        attackButton.setPreferredSize(new java.awt.Dimension(140, 140));
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });
        actionPanel.add(attackButton);

        blockButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Block.jpg"))); // NOI18N
        blockButton.setPreferredSize(new java.awt.Dimension(140, 140));
        blockButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blockButtonMouseClicked(evt);
            }
        });
        blockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockButtonActionPerformed(evt);
            }
        });
        actionPanel.add(blockButton);

        runButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/run.jpg"))); // NOI18N
        runButton.setPreferredSize(new java.awt.Dimension(140, 140));
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        actionPanel.add(runButton);

        MenuPanel.setPreferredSize(new java.awt.Dimension(480, 80));
        MenuPanel.setLayout(new java.awt.GridLayout(1, 2));

        StatsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Stats.jpg"))); // NOI18N
        StatsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatsButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(StatsButton);

        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/exit.jpg"))); // NOI18N
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(exitButton);

        javax.swing.GroupLayout FightLayout = new javax.swing.GroupLayout(Fight);
        Fight.setLayout(FightLayout);
        FightLayout.setHorizontalGroup(
            FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FightLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FightLayout.createSequentialGroup()
                        .addComponent(mobStatsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(FightLayout.createSequentialGroup()
                        .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textArea, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FightLayout.createSequentialGroup()
                                .addComponent(hpIcon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(hpBar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HeroName, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)))
                        .addContainerGap())))
            .addGroup(FightLayout.createSequentialGroup()
                .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FightLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FightLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(weaponIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(weapon, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FightLayout.setVerticalGroup(
            FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FightLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FightLayout.createSequentialGroup()
                        .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(FightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(weapon)
                                .addComponent(HeroName))
                            .addComponent(weaponIcon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(hpBar))
                    .addComponent(hpIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(mobStatsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textArea, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(MenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout contPanLayout = new javax.swing.GroupLayout(contPan);
        contPan.setLayout(contPanLayout);
        contPanLayout.setHorizontalGroup(
            contPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fight, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
            .addGroup(contPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contPanLayout.setVerticalGroup(
            contPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(contPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(contPan);
        contPan.setBounds(0, 0, 480, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void restart()
    {
        Hero.Dead();
    }
    
    public void turn()
    {        
        if (Turn == true)
        {
            newMob.move = randNumber.gen(0,2);
            switch(newMob.move)
            {
                case 0: 
                    if (Hero.block == true)
                    {
                        newMob.curDamage = randNumber.gen(0,newMob.maxDamage/2);
                    }
                    else if (Hero.block == false)
                    {
                        newMob.curDamage = randNumber.gen(0,newMob.maxDamage);
                    }
                    Hero.curHP -= newMob.curDamage;
                    HeroStatsUpdate();
                    writeMove(Hero.Name + ":  Takes " + newMob.curDamage + "Damege" + "\n");
                    break;
                case 1:
                    newMob.block=true;
                    writeMove(newMob.mobName + ": Get it's shield ready\n");
            }
            if (Hero.curHP<=0)
            {
                Hero.curHP=0;  
                HeroStatsUpdate();
                Hero.Dead();
            }
            Turn = false;
        }
    }
    
    private void createHero()
    {
        Hero.createHero();
        HeroName.setText(Hero.Name);
        hpBar.setText(Hero.curHP +  "/" + Hero.maxHP);  
        weapon.setText(Hero.weaponName[Hero.curWeapon]);
    }
    
    private void generMob()
    {
        newMob.gen();
        HPset.setText(newMob.curHP + "/" + newMob.maxHP);
        monsterIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(newMob.mobURL)));
        writeMove("\n" + "You found " + newMob.mobName + "\n");
        
    }
    
    public void writeMove(String line)
    {
        dialogText.append("\n" + line);
    }
    
    public void HeroStatsUpdate()
    {
        hpBar.setText(Hero.curHP + "/" + Hero.maxHP);
    }
    
    public void HeroWeaponUpdate()
    {
        weapon.setText(Hero.weaponName[Hero.curWeapon]);
        Hero.dmg_wp =Hero.Damage+Hero.weapon[Hero.curWeapon];
    }
    
    public void MobStatsUpdate()
    {
        HPset.setText(newMob.curHP + "/" + newMob.maxHP);
    }
    
    private void StartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartMouseClicked
        Start.setVisible(false);
        createHero();
        Fight.setVisible(true);
        generMob();
        turn();
    }//GEN-LAST:event_StartMouseClicked

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void StatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatsButtonActionPerformed
        if (SystemTray.isSupported())
        {
            SystemTray tray = SystemTray.getSystemTray();

            java.awt.Image image = Toolkit.getDefaultToolkit().getImage("images/tray.gif");
            TrayIcon trayIcon = new TrayIcon(image);
            try {
                tray.add(trayIcon);
            } catch (AWTException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            trayIcon.displayMessage("Your Hero stats", "HP:" + Hero.curHP + "\n" + "Damage: " + Hero.dmg_wp + "\n",TrayIcon.MessageType.INFO);
        }

        else
        {
            JOptionPane.showMessageDialog(null,"HP:" + Hero.curHP + "\n" + "Damage: " + Hero.dmg_wp + "\n","Your Hero stats", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_StatsButtonActionPerformed
    
    private void blockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockButtonActionPerformed
        Hero.block = true;
        Turn=true;
        writeMove("You: Trying to block\n");
        turn();
    }//GEN-LAST:event_blockButtonActionPerformed

    private void blockButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blockButtonMouseClicked
        
    }//GEN-LAST:event_blockButtonMouseClicked

    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
           if (newMob.block == true)
            {
                Hero.curDMG = randNumber.gen(0,Hero.dmg_wp/2);
            }
            else if (newMob.block == false)
            {
                Hero.curDMG = randNumber.gen(0,Hero.dmg_wp);
            }
            newMob.curHP -= Hero.curDMG;
            MobStatsUpdate();
            writeMove(newMob.mobName + ":  Takes " + Hero.curDMG + "Damege" + "\n");
            
            if(newMob.curHP<=0)
            {
                newMob.curHP=0;
                Hero.killedmobs++;
                if(Hero.killedmobs == 1)
                {
                    Hero.curWeapon = 1;
                    HeroWeaponUpdate();
                }
                
                if(Hero.killedmobs == 5)
                {
                    Hero.curWeapon = 2;
                    HeroWeaponUpdate();
                }
                if(Hero.killedmobs == 10)
                {
                    Hero.curWeapon = 3;
                    HeroWeaponUpdate();
                }
                if(Hero.killedmobs == 20)
                {
                    Hero.curWeapon = 4;
                    HeroWeaponUpdate();
                }
                
             writeMove(newMob.mobName + ":  Was killed by " + Hero.Name);
             writeMove("You: HP was restored!");
             Hero.curHP = 100;
             HeroStatsUpdate();
                
                generMob();
            }
            else
            {
                Turn = true;
                turn();
            }
    }//GEN-LAST:event_attackButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        generMob();
    }//GEN-LAST:event_runButtonActionPerformed

    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Fight;
    private javax.swing.JLabel HP;
    private javax.swing.JLabel HPset;
    private javax.swing.JLabel HeroName;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JPanel Start;
    private javax.swing.JButton StatsButton;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JButton attackButton;
    private javax.swing.JButton blockButton;
    private javax.swing.JPanel contPan;
    private javax.swing.JTextArea dialogText;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel hpBar;
    private javax.swing.JLabel hpIcon;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel mobStatsPanel;
    private javax.swing.JLabel monsterIcon;
    private javax.swing.JButton runButton;
    private javax.swing.JScrollPane textArea;
    private javax.swing.JLabel weapon;
    private javax.swing.JLabel weaponIcon;
    // End of variables declaration//GEN-END:variables

}
